简称：摘要数据
默认保存的数据如果很长，则占用的内存相对就要较大，如果可以使用算法来保存数据就会减少数据的占用空间
MD5算法保存会把数据抓换成对应的算法数据

对相同的数据进行摘要, 那么其结果是相同的
摘要后的结果是32位的，这样大大降低了内存的损耗
无论输入数据多大，MD5 的输出始终是固定的 32 位十六进制字符串（即 128 位二进制，转换为十六进制就是 32 个字符）。
优点是所占内存要小

如果是列表字典须要转换为json数据（双引号,json.dumps）

MD5加密算法被认为是不可逆的。
MD5是一种哈希函数，它将任意长度的输入转换为固定长度（128位）的哈希值。
哈希函数的设计目标是单向性，即从哈希值无法推导出原始输入。因此，MD5在理论上是不可逆的。
不过，MD5存在一些安全漏洞，容易受到碰撞攻击（即两个不同的输入生成相同的哈希值），
因此不再推荐用于安全敏感的场景。但对于一般的不可逆需求，MD5仍然可以使用


---------------------------------使用场景---------------------------------
遇到需要大量数据去重，可以使用MD5算法摘要为32位的十六进制字符，这样不管数据多大始终都是32位，这样可以降低内存的开销
然后再使用判断是否两个摘要数据相同，如果相同则是相同的数据
还可用使用在其他算法领域，这里只是针对爬虫数据处理去重
